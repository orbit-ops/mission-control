{
  "openapi": "3.0.3",
  "info": {
    "title": "Ent Schema API",
    "description": "This is an auto generated API description made out of an Ent schema definition",
    "version": "0.1.0"
  },
  "paths": {
    "/accesses/{id}/access-tokens": {
      "get": {
        "tags": [
          "Access",
          "x-tf-ignore"
        ],
        "summary": "List attached AccessTokens",
        "description": "List attached AccessTokens.",
        "operationId": "listAccessAccessTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Access",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Accesses list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Access_AccessTokensList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/accesses/{id}/approvals": {
      "get": {
        "tags": [
          "Access"
        ],
        "summary": "List attached Approvals",
        "description": "List attached Approvals.",
        "operationId": "listAccessApprovals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Access",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Accesses list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Access_ApprovalsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/accesses/{id}/request": {
      "get": {
        "tags": [
          "Access"
        ],
        "summary": "Find the attached Request",
        "description": "Find the attached Request of the Access with the given ID",
        "operationId": "readAccessRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Access",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request attached to Access with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Access_RequestRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/api-keys": {
      "get": {
        "tags": [
          "ApiKey"
        ],
        "summary": "List ApiKeys",
        "description": "List ApiKeys.",
        "operationId": "listApiKey",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result ApiKey list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Create a new ApiKey",
        "description": "Creates a new ApiKey and persists it to storage.",
        "operationId": "createApiKey",
        "requestBody": {
          "description": "ApiKey to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "key"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ApiKey created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/api-keys/{id}": {
      "get": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Find a ApiKey by ID",
        "description": "Finds the ApiKey with the requested ID and returns it.",
        "operationId": "readApiKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ApiKey",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ApiKey with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Deletes a ApiKey by ID",
        "description": "Deletes the ApiKey with the requested ID.",
        "operationId": "deleteApiKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ApiKey",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ApiKey with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/approvals": {
      "get": {
        "tags": [
          "Approval",
          "x-tf-ignore"
        ],
        "summary": "List Approvals",
        "description": "List Approvals.",
        "operationId": "listApproval",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Approval list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApprovalList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Approval",
          "x-tf-ignore"
        ],
        "summary": "Create a new Approval",
        "description": "Creates a new Approval and persists it to storage.",
        "operationId": "createApproval",
        "requestBody": {
          "description": "Approval to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "person": {
                    "type": "string"
                  },
                  "approved_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "approved": {
                    "type": "boolean"
                  },
                  "revoked": {
                    "type": "boolean"
                  },
                  "revoked_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "request": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "access": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "person",
                  "approved_time",
                  "approved",
                  "revoked",
                  "request"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Approval created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/approvals/{id}": {
      "get": {
        "tags": [
          "Approval",
          "x-tf-ignore"
        ],
        "summary": "Find a Approval by ID",
        "description": "Finds the Approval with the requested ID and returns it.",
        "operationId": "readApproval",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Approval",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Approval with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Approval",
          "x-tf-ignore"
        ],
        "summary": "Deletes a Approval by ID",
        "description": "Deletes the Approval with the requested ID.",
        "operationId": "deleteApproval",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Approval",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Approval with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Approval",
          "x-tf-ignore"
        ],
        "summary": "Updates a Approval",
        "description": "Updates a Approval and persists changes to storage.",
        "operationId": "updateApproval",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Approval",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Approval properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "revoked": {
                    "type": "boolean"
                  },
                  "revoked_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "request": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "access": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Approval updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/approvals/{id}/access": {
      "get": {
        "tags": [
          "Approval"
        ],
        "summary": "Find the attached Access",
        "description": "Find the attached Access of the Approval with the given ID",
        "operationId": "readApprovalAccess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Approval",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Access attached to Approval with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Approval_AccessRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/audits": {
      "get": {
        "tags": [
          "Audit",
          "x-tf-ignore"
        ],
        "summary": "List Audits",
        "description": "List Audits.",
        "operationId": "listAudit",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Audit list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/audits/{id}": {
      "get": {
        "tags": [
          "Audit",
          "x-tf-ignore"
        ],
        "summary": "Find a Audit by ID",
        "description": "Finds the Audit with the requested ID and returns it.",
        "operationId": "readAudit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Audit",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/missions": {
      "get": {
        "tags": [
          "Mission"
        ],
        "summary": "List Missions",
        "description": "List Missions.",
        "operationId": "listMission",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Mission list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MissionList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Mission"
        ],
        "summary": "Create a new Mission",
        "description": "Creates a new Mission and persists it to storage.",
        "operationId": "createMission",
        "requestBody": {
          "description": "Mission to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "integer"
                  },
                  "min_approvers": {
                    "type": "integer"
                  },
                  "possible_approvers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rockets": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "requests": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "required": [
                  "name",
                  "duration",
                  "min_approvers",
                  "possible_approvers",
                  "rockets"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mission created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissionCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/missions/{id}": {
      "get": {
        "tags": [
          "Mission"
        ],
        "summary": "Find a Mission by ID",
        "description": "Finds the Mission with the requested ID and returns it.",
        "operationId": "readMission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Mission",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mission with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissionRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Mission"
        ],
        "summary": "Deletes a Mission by ID",
        "description": "Deletes the Mission with the requested ID.",
        "operationId": "deleteMission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Mission",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Mission with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Mission"
        ],
        "summary": "Updates a Mission",
        "description": "Updates a Mission and persists changes to storage.",
        "operationId": "updateMission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Mission",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Mission properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "integer"
                  },
                  "min_approvers": {
                    "type": "integer"
                  },
                  "possible_approvers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rockets": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "requests": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mission updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissionUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/missions/{id}/requests": {
      "get": {
        "tags": [
          "Mission"
        ],
        "summary": "List attached Requests",
        "description": "List attached Requests.",
        "operationId": "listMissionRequests",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Mission",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Missions list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Mission_RequestsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/missions/{id}/rockets": {
      "get": {
        "tags": [
          "Mission"
        ],
        "summary": "List attached Rockets",
        "description": "List attached Rockets.",
        "operationId": "listMissionRockets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Mission",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Missions list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Mission_RocketsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/requests": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "List Requests",
        "description": "List Requests.",
        "operationId": "listRequest",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Request list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Create a new Request",
        "description": "Creates a new Request and persists it to storage.",
        "operationId": "createRequest",
        "requestBody": {
          "description": "Request to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  },
                  "requester": {
                    "type": "string"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "cancelled_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "cancelled": {
                    "type": "boolean"
                  },
                  "approvals": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "mission": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "reason",
                  "requester",
                  "timestamp",
                  "cancelled",
                  "mission"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/requests/{id}": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Find a Request by ID",
        "description": "Finds the Request with the requested ID and returns it.",
        "operationId": "readRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Request",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Request"
        ],
        "summary": "Deletes a Request by ID",
        "description": "Deletes the Request with the requested ID.",
        "operationId": "deleteRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Request",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Request"
        ],
        "summary": "Updates a Request",
        "description": "Updates a Request and persists changes to storage.",
        "operationId": "updateRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Request",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Request properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cancelled_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "cancelled": {
                    "type": "boolean"
                  },
                  "approvals": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "mission": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/requests/{id}/approvals": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "List attached Approvals",
        "description": "List attached Approvals.",
        "operationId": "listRequestApprovals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Request",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Requests list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Request_ApprovalsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/requests/{id}/mission": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Find the attached Mission",
        "description": "Find the attached Mission of the Request with the given ID",
        "operationId": "readRequestMission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Request",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mission attached to Request with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Request_MissionRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/rockets": {
      "get": {
        "tags": [
          "Rocket"
        ],
        "summary": "List Rockets",
        "description": "List Rockets.",
        "operationId": "listRocket",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Rocket list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RocketList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Rocket"
        ],
        "summary": "Create a new Rocket",
        "description": "Creates a new Rocket and persists it to storage.",
        "operationId": "createRocket",
        "requestBody": {
          "description": "Rocket to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "config": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name",
                  "config"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Rocket created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RocketCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      }
    },
    "/rockets/{id}": {
      "get": {
        "tags": [
          "Rocket"
        ],
        "summary": "Find a Rocket by ID",
        "description": "Finds the Rocket with the requested ID and returns it.",
        "operationId": "readRocket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Rocket",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rocket with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RocketRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Rocket"
        ],
        "summary": "Deletes a Rocket by ID",
        "description": "Deletes the Rocket with the requested ID.",
        "operationId": "deleteRocket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Rocket",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Rocket with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "CookieAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Rocket"
        ],
        "summary": "Updates a Rocket",
        "description": "Updates a Rocket and persists changes to storage.",
        "operationId": "updateRocket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Rocket",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Rocket properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "config": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Rocket updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RocketUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Access": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "start_time": {
            "type": "string",
            "format": "date-time"
          },
          "rolled_back": {
            "type": "boolean"
          },
          "rollback_time": {
            "type": "string",
            "format": "date-time"
          },
          "rollback_reason": {
            "type": "string"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          },
          "approvals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Approval"
            }
          },
          "request": {
            "$ref": "#/components/schemas/Request"
          },
          "accessTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionTokens"
            }
          }
        },
        "required": [
          "id",
          "start_time",
          "rolled_back",
          "expiration",
          "request"
        ]
      },
      "Access_AccessTokensList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "action": {
            "type": "string",
            "enum": [
              "create",
              "remove"
            ]
          },
          "token": {
            "type": "string"
          },
          "access_id": {
            "type": "string",
            "format": "uuid"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "action",
          "token",
          "access_id",
          "expiration"
        ]
      },
      "Access_ApprovalsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "person": {
            "type": "string"
          },
          "approved_time": {
            "type": "string",
            "format": "date-time"
          },
          "approved": {
            "type": "boolean"
          },
          "revoked": {
            "type": "boolean"
          },
          "revoked_time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "person",
          "approved_time",
          "approved",
          "revoked"
        ]
      },
      "Access_RequestRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string"
          },
          "requester": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled_time": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "reason",
          "requester",
          "timestamp",
          "cancelled"
        ]
      },
      "ActionTokens": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "action": {
            "type": "string",
            "enum": [
              "create",
              "remove"
            ]
          },
          "token": {
            "type": "string"
          },
          "access_id": {
            "type": "string",
            "format": "uuid"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          },
          "accessTokens": {
            "$ref": "#/components/schemas/Access"
          }
        },
        "required": [
          "id",
          "action",
          "token",
          "access_id",
          "expiration",
          "accessTokens"
        ]
      },
      "ApiKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "key"
        ]
      },
      "ApiKeyCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ApiKeyList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ApiKeyRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Approval": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "person": {
            "type": "string"
          },
          "approved_time": {
            "type": "string",
            "format": "date-time"
          },
          "approved": {
            "type": "boolean"
          },
          "revoked": {
            "type": "boolean"
          },
          "revoked_time": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/Request"
          },
          "access": {
            "$ref": "#/components/schemas/Access"
          }
        },
        "required": [
          "id",
          "person",
          "approved_time",
          "approved",
          "revoked",
          "request"
        ]
      },
      "ApprovalCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "person": {
            "type": "string"
          },
          "approved_time": {
            "type": "string",
            "format": "date-time"
          },
          "approved": {
            "type": "boolean"
          },
          "revoked": {
            "type": "boolean"
          },
          "revoked_time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "person",
          "approved_time",
          "approved",
          "revoked"
        ]
      },
      "ApprovalList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "person": {
            "type": "string"
          },
          "approved_time": {
            "type": "string",
            "format": "date-time"
          },
          "approved": {
            "type": "boolean"
          },
          "revoked": {
            "type": "boolean"
          },
          "revoked_time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "person",
          "approved_time",
          "approved",
          "revoked"
        ]
      },
      "ApprovalRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "person": {
            "type": "string"
          },
          "approved_time": {
            "type": "string",
            "format": "date-time"
          },
          "approved": {
            "type": "boolean"
          },
          "revoked": {
            "type": "boolean"
          },
          "revoked_time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "person",
          "approved_time",
          "approved",
          "revoked"
        ]
      },
      "ApprovalUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "person": {
            "type": "string"
          },
          "approved_time": {
            "type": "string",
            "format": "date-time"
          },
          "approved": {
            "type": "boolean"
          },
          "revoked": {
            "type": "boolean"
          },
          "revoked_time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "person",
          "approved_time",
          "approved",
          "revoked"
        ]
      },
      "Approval_AccessRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "start_time": {
            "type": "string",
            "format": "date-time"
          },
          "rolled_back": {
            "type": "boolean"
          },
          "rollback_time": {
            "type": "string",
            "format": "date-time"
          },
          "rollback_reason": {
            "type": "string"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "start_time",
          "rolled_back",
          "expiration"
        ]
      },
      "Audit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "action": {
            "type": "string",
            "enum": [
              "ApproveRequest",
              "RevokeApprovalRequest",
              "RejectRequest",
              "CreateAccess",
              "RemoveAccess"
            ]
          },
          "author": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "action",
          "author",
          "timestamp"
        ]
      },
      "AuditList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "action": {
            "type": "string",
            "enum": [
              "ApproveRequest",
              "RevokeApprovalRequest",
              "RejectRequest",
              "CreateAccess",
              "RemoveAccess"
            ]
          },
          "author": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "action",
          "author",
          "timestamp"
        ]
      },
      "AuditRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "action": {
            "type": "string",
            "enum": [
              "ApproveRequest",
              "RevokeApprovalRequest",
              "RejectRequest",
              "CreateAccess",
              "RemoveAccess"
            ]
          },
          "author": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "action",
          "author",
          "timestamp"
        ]
      },
      "Mission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "min_approvers": {
            "type": "integer"
          },
          "possible_approvers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rockets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rocket"
            }
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Request"
            }
          }
        },
        "required": [
          "id",
          "name",
          "duration",
          "min_approvers",
          "possible_approvers",
          "rockets"
        ]
      },
      "MissionCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "min_approvers": {
            "type": "integer"
          },
          "possible_approvers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "duration",
          "min_approvers",
          "possible_approvers"
        ]
      },
      "MissionList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "min_approvers": {
            "type": "integer"
          },
          "possible_approvers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "duration",
          "min_approvers",
          "possible_approvers"
        ]
      },
      "MissionRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "min_approvers": {
            "type": "integer"
          },
          "possible_approvers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "duration",
          "min_approvers",
          "possible_approvers"
        ]
      },
      "MissionUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "min_approvers": {
            "type": "integer"
          },
          "possible_approvers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "duration",
          "min_approvers",
          "possible_approvers"
        ]
      },
      "Mission_RequestsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string"
          },
          "requester": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled_time": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "reason",
          "requester",
          "timestamp",
          "cancelled"
        ]
      },
      "Mission_RocketsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "config"
        ]
      },
      "Provider": {
        "type": "object",
        "properties": {
          "ApiKey": {
            "type": "string"
          },
          "Endpoint": {
            "type": "string"
          }
        },
        "required": [
          "ApiKey",
          "Endpoint"
        ]
      },
      "Request": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string"
          },
          "requester": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled_time": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled": {
            "type": "boolean"
          },
          "approvals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Approval"
            }
          },
          "mission": {
            "$ref": "#/components/schemas/Mission"
          }
        },
        "required": [
          "id",
          "reason",
          "requester",
          "timestamp",
          "cancelled",
          "mission"
        ]
      },
      "RequestCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string"
          },
          "requester": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled_time": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "reason",
          "requester",
          "timestamp",
          "cancelled"
        ]
      },
      "RequestList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string"
          },
          "requester": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled_time": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "reason",
          "requester",
          "timestamp",
          "cancelled"
        ]
      },
      "RequestRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string"
          },
          "requester": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled_time": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "reason",
          "requester",
          "timestamp",
          "cancelled"
        ]
      },
      "RequestUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string"
          },
          "requester": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled_time": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "reason",
          "requester",
          "timestamp",
          "cancelled"
        ]
      },
      "Request_ApprovalsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "person": {
            "type": "string"
          },
          "approved_time": {
            "type": "string",
            "format": "date-time"
          },
          "approved": {
            "type": "boolean"
          },
          "revoked": {
            "type": "boolean"
          },
          "revoked_time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "person",
          "approved_time",
          "approved",
          "revoked"
        ]
      },
      "Request_MissionRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "min_approvers": {
            "type": "integer"
          },
          "possible_approvers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "duration",
          "min_approvers",
          "possible_approvers"
        ]
      },
      "Rocket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "config"
        ]
      },
      "RocketCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "config"
        ]
      },
      "RocketList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "config"
        ]
      },
      "RocketRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "config"
        ]
      },
      "RocketUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "config"
        ]
      }
    },
    "responses": {
      "400": {
        "description": "invalid input, data invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "403": {
        "description": "insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "404": {
        "description": "resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "409": {
        "description": "conflicting resources",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "500": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      },
      "CookieAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "cookie"
      }
    }
  }
}